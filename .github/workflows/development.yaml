name: Build and Deploy to AWS EKS Cluster

on:
  push:
    branches:
      - development

env:
  DEPLOYMENT_NAME: liquid.dev # TODO: update to deployment name
  IMAGE: dev.liquid.indexer
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEB_HOOK }}

jobs:
  production:
    if: github.ref == 'refs/heads/development'
    name: Deploy Service to Development
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.3'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save to .env
        run: aws secretsmanager get-secret-value --secret-id dev/liquid-indexer --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > .env

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dev.liquid.indexer
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
      - name: Update kube config
        run: aws eks update-kubeconfig --name liquid-dev --region eu-west-2

      - name: Deploy image to Amazon EKS
        env:
          EKS_DIR: ./k8s/development
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dev.liquid.indexer
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd $EKS_DIR
          aws eks --region eu-west-2 update-kubeconfig --name liquid-dev
          curl -s -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          ./kustomize edit set image liquid-indexer-ecr=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          ./kustomize build .| kubectl apply -f -

      - name: Notify slack success
        if: success()
        uses: act10ns/slack@v1
        with:
          channel: deployment
          message: Deployed {{ env.GITHUB_REF_NAME }} branch 'Successfully :rocket:'
          status: SUCCESS

      - name: Notify slack fail
        if: failure()
        uses: act10ns/slack@v1
        with:
          channel: deployment
          message: Deployed {{ env.GITHUB_REF_NAME }} branch failed
          status: FAILED
